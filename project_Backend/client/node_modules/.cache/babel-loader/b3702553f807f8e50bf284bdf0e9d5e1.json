{"ast":null,"code":"import _regeneratorRuntime from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/draft/Desktop/project_Backend/client/src/Reserve.js\";\nimport React, { Component } from 'react';\nimport MyButton from './MyButton';\nimport MyDropdownButton from './MyDropdownButton';\nimport DayPicker from './MyDatePicker';\nimport 'react-day-picker/lib/style.css';\nimport { Table, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport './App.css';\nimport MyNavBar from './MyNavBar';\n\nvar Reserve =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reserve, _Component);\n\n  function Reserve(props, context) {\n    var _this;\n\n    _classCallCheck(this, Reserve);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reserve).call(this, props, context));\n\n    _this.insertReserve = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"PLEASE TYPE NUMBER, NOT CHARACTER!\");else if (_this.state.insert_reservation_cusIDTB !== '' && _this.state.insert_reservation_tripNoTB !== '') {\n        var data = {\n          tripNo: _this.state.insert_reservation_tripNoTB,\n          customerID: _this.state.insert_reservation_cusIDTB\n        };\n        console.log(JSON.stringify(data));\n        fetch('/dplop/insert_reservation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data) //this.props.history.push('/');\n\n        });\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.cancelReserve = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"PLEASE TYPE NUMBER, NOT CHARACTER!\");else if (_this.state.cancel_reservation_RSVCodeTB !== '') {\n        fetch('/dplop/cancel_reservation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            reservationCode: _this.state.cancel_reservation_RSVCodeTB\n          })\n        }); // this.props.history.push('/');\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.listReserve = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"PLEASE TYPE NUMBER, NOT CHARACTER!\");else if (_this.state.list_reservation_cusIDTB !== '') {\n        fetch('/dplop/list_reservation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(_this.state.list_reservation_cusIDTB)\n        }); // this.props.history.push('/');\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.handle_insert_reservation_cusID = _this.handle_insert_reservation_cusID.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_insert_reservation_tripNo = _this.handle_insert_reservation_tripNo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_cancel_reservation_RSVCode = _this.handle_cancel_reservation_RSVCode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_list_reservation_cusID = _this.handle_list_reservation_cusID.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchReservTable = _this.fetchReservTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      contacts: [],\n      insert_reservation_cusIDTB: '',\n      insert_reservation_tripNoTB: '',\n      cancel_reservation_RSVCodeTB: '',\n      list_reservation_cusIDTB: '',\n      cansend: false\n    };\n    return _this;\n  }\n\n  _createClass(Reserve, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchReservTable();\n    }\n  }, {\n    key: \"fetchReservTable\",\n    value: function () {\n      var _fetchReservTable = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.setState({\n                  contacts: []\n                });\n                _context.next = 4;\n                return fetch('https://raw.githubusercontent.com/KNTXTremE/TravelVankaWebsite/master/src/raw/rawfile');\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                results = _context.sent;\n                _context.next = 10;\n                return this.setState({\n                  contacts: results\n                });\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('Reservation table parsing failed', _context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      return function fetchReservTable() {\n        return _fetchReservTable.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getValidationState\",\n    value: function getValidationState(txt) {\n      var length = txt.length;\n\n      if ((txt === this.state.insert_reservation_cusIDTB || txt === this.state.insert_reservation_tripNoTB || txt === this.state.insert_reservation_seatsNo || txt === this.state.cancel_reservation_RSVCodeTB || txt === this.state.list_reservation_cusIDTB) && length > 0) {\n        if (isNaN(parseInt(txt))) {\n          this.state.cansend = false;\n          return 'error';\n        } else {\n          this.state.cansend = true;\n        }\n      } // if (length > 3) return 'success';\n      // else if (length > 0) return 'error';\n\n\n      return null;\n    }\n  }, {\n    key: \"handle_insert_reservation_cusID\",\n    value: function handle_insert_reservation_cusID(e) {\n      this.setState({\n        insert_reservation_cusIDTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_insert_reservation_tripNo\",\n    value: function handle_insert_reservation_tripNo(e) {\n      this.setState({\n        insert_reservation_tripNoTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_cancel_reservation_RSVCode\",\n    value: function handle_cancel_reservation_RSVCode(e) {\n      this.setState({\n        cancel_reservation_RSVCodeTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_list_reservation_cusID\",\n    value: function handle_list_reservation_cusID(e) {\n      this.setState({\n        list_reservation_cusIDTB: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(MyNavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"App-containers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.insert_reservation_cusIDTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Insert Reservation\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.insert_reservation_cusIDTB,\n        placeholder: \"CustomerID\",\n        onChange: this.handle_insert_reservation_cusID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.insert_reservation_tripNoTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.insert_reservation_tripNoTB,\n        placeholder: \"Trip No\",\n        onChange: this.handle_insert_reservation_tripNo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.insertReserve,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Insert\"))), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.cancel_reservation_RSVCodeTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Cancel Reservation\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.cancel_reservation_RSVCodeTB,\n        placeholder: \"RSV Code\",\n        onChange: this.handle_cancel_reservation_RSVCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"danger\",\n        onClick: this.cancelReserve,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"List of Reservation\"), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.list_reservation_cusIDTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.list_reservation_cusIDTB,\n        placeholder: \"CustomerID\",\n        onChange: this.handle_list_reservation_cusID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.listReserve,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"List reservation of \", this.state.list_reservation_cusIDTB)), React.createElement(Table, {\n        responsive: true,\n        striped: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Departure station\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Terminal station\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Remark\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.state.contacts === null ? null : this.state.contacts.map(function (contact) {\n        var firstname = contact.firstname,\n            lastname = contact.lastname,\n            departureStation = contact.departureStation,\n            terminalStation = contact.terminalStation,\n            date = contact.date,\n            remark = contact.remark;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, firstname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, lastname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, departureStation), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, terminalStation), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, date), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, remark));\n      }))))));\n    }\n  }]);\n\n  return Reserve;\n}(Component);\n\nexport default Reserve;","map":{"version":3,"sources":["/Users/draft/Desktop/project_Backend/client/src/Reserve.js"],"names":["React","Component","MyButton","MyDropdownButton","DayPicker","Table","FormGroup","ControlLabel","FormControl","Button","MyNavBar","Reserve","props","context","insertReserve","e","preventDefault","state","cansend","alert","insert_reservation_cusIDTB","insert_reservation_tripNoTB","data","tripNo","customerID","console","log","JSON","stringify","fetch","method","headers","body","cancelReserve","cancel_reservation_RSVCodeTB","reservationCode","listReserve","list_reservation_cusIDTB","handle_insert_reservation_cusID","bind","handle_insert_reservation_tripNo","handle_cancel_reservation_RSVCode","handle_list_reservation_cusID","fetchReservTable","contacts","setState","response","json","results","txt","length","insert_reservation_seatsNo","isNaN","parseInt","target","value","getValidationState","map","contact","firstname","lastname","departureStation","terminalStation","date","remark"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyButton from './MyButton';\nimport MyDropdownButton from './MyDropdownButton';\nimport DayPicker from './MyDatePicker';\nimport 'react-day-picker/lib/style.css'\nimport { Table, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap'\nimport './App.css';\nimport MyNavBar from './MyNavBar';\n\n\nclass Reserve extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.handle_insert_reservation_cusID = this.handle_insert_reservation_cusID.bind(this);\n        this.handle_insert_reservation_tripNo = this.handle_insert_reservation_tripNo.bind(this);\n        this.handle_cancel_reservation_RSVCode = this.handle_cancel_reservation_RSVCode.bind(this);\n        this.handle_list_reservation_cusID = this.handle_list_reservation_cusID.bind(this);\n        this.fetchReservTable = this.fetchReservTable.bind(this);\n\n        this.state = {\n            contacts: [],\n            insert_reservation_cusIDTB: '',\n            insert_reservation_tripNoTB: '',\n            cancel_reservation_RSVCodeTB: '',\n            list_reservation_cusIDTB: '',\n            cansend: false\n        }\n    }\n\n    componentDidMount() {\n        this.fetchReservTable();\n    }\n\n    async fetchReservTable() {\n        try {\n            this.setState({\n                contacts: []\n            })\n            const response = await fetch('https://raw.githubusercontent.com/KNTXTremE/TravelVankaWebsite/master/src/raw/rawfile')\n            const results = await response.json();\n            await this.setState({ contacts: results });\n            //console.log(this.state.results)\n        } catch (error) {\n            console.log('Reservation table parsing failed', error);\n        }\n    }\n\n    getValidationState(txt) {\n        const length = txt.length;\n        if ((txt === this.state.insert_reservation_cusIDTB || txt === this.state.insert_reservation_tripNoTB || txt === this.state.insert_reservation_seatsNo || txt === this.state.cancel_reservation_RSVCodeTB || txt === this.state.list_reservation_cusIDTB) && length > 0) {\n            if (isNaN(parseInt(txt))) {\n                this.state.cansend = false\n                return 'error'\n            }\n            else {\n                this.state.cansend = true\n            }\n\n        }\n        // if (length > 3) return 'success';\n        // else if (length > 0) return 'error';\n        return null;\n    }\n\n    handle_insert_reservation_cusID(e) {\n        this.setState({ insert_reservation_cusIDTB: e.target.value });\n    }\n\n    handle_insert_reservation_tripNo(e) {\n        this.setState({ insert_reservation_tripNoTB: e.target.value });\n    }\n\n    handle_cancel_reservation_RSVCode(e) {\n        this.setState({ cancel_reservation_RSVCodeTB: e.target.value });\n    }\n\n    handle_list_reservation_cusID(e) {\n        this.setState({ list_reservation_cusIDTB: e.target.value });\n    }\n\n    insertReserve = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`PLEASE TYPE NUMBER, NOT CHARACTER!`);\n        else if (this.state.insert_reservation_cusIDTB !== '' && this.state.insert_reservation_tripNoTB !== '') {\n            const data = {tripNo:this.state.insert_reservation_tripNoTB,customerID:this.state.insert_reservation_cusIDTB}\n            console.log(JSON.stringify(data))\n            fetch('/dplop/insert_reservation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n                //this.props.history.push('/');\n\n            })\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n    cancelReserve = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`PLEASE TYPE NUMBER, NOT CHARACTER!`);\n        else if (this.state.cancel_reservation_RSVCodeTB !== '') {\n            fetch('/dplop/cancel_reservation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({reservationCode:this.state.cancel_reservation_RSVCodeTB})\n\n            })\n            // this.props.history.push('/');\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n    listReserve = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`PLEASE TYPE NUMBER, NOT CHARACTER!`);\n        else if (this.state.list_reservation_cusIDTB !== '') {\n            fetch('/dplop/list_reservation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(this.state.list_reservation_cusIDTB)\n\n            })\n            // this.props.history.push('/');\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"App\">\n                    <MyNavBar></MyNavBar>\n                    <header className=\"App-containers\">\n                        <form>\n                            {/* INSERT RESERVATION */}\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                                validationState={this.getValidationState(this.state.insert_reservation_cusIDTB)}\n                            >\n                                <ControlLabel>Insert Reservation</ControlLabel>\n                                <FormControl\n                                    type=\"text\"\n                                    value={this.state.insert_reservation_cusIDTB}\n                                    placeholder=\"CustomerID\"\n                                    onChange={this.handle_insert_reservation_cusID}\n                                />\n                                <FormControl.Feedback />\n                            </FormGroup>\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                                validationState={this.getValidationState(this.state.insert_reservation_tripNoTB)}\n                            >\n                                <FormControl\n                                    type=\"text\"\n                                    value={this.state.insert_reservation_tripNoTB}\n                                    placeholder=\"Trip No\"\n                                    onChange={this.handle_insert_reservation_tripNo}\n                                />\n                                <FormControl.Feedback />\n                                <Button bsStyle=\"primary\" onClick={this.insertReserve}>Insert</Button>\n                            </FormGroup>\n                        </form>\n\n                        <form>\n                            {/* CANCEL RESERVATION */}\n                            <FormGroup\n                                controlId=\"formBasicText\"\n                                validationState={this.getValidationState(this.state.cancel_reservation_RSVCodeTB)}\n                            >\n                                <ControlLabel>Cancel Reservation</ControlLabel>\n                                <FormControl\n                                    type=\"text\"\n                                    value={this.state.cancel_reservation_RSVCodeTB}\n                                    placeholder=\"RSV Code\"\n                                    onChange={this.handle_cancel_reservation_RSVCode}\n                                />\n                                <FormControl.Feedback />\n                                <Button bsStyle=\"danger\" onClick={this.cancelReserve}>Cancel</Button>\n                            </FormGroup>\n                        </form>\n\n\n\n                        {/* <MyDropdownButton></MyDropdownButton>\n                            <DayPicker />\n                            <MyButton></MyButton> */}\n\n\n\n                        {/* LIST OF RESERVATION */}\n                        <ControlLabel>List of Reservation</ControlLabel>\n                        <FormGroup\n                            controlId=\"formBasicText\"\n                            validationState={this.getValidationState(this.state.list_reservation_cusIDTB)}\n                        >\n                            <FormControl\n                                type=\"text\"\n                                value={this.state.list_reservation_cusIDTB}\n                                placeholder=\"CustomerID\"\n                                onChange={this.handle_list_reservation_cusID}\n                            />\n                            <FormControl.Feedback />\n                            <Button bsStyle=\"primary\" onClick={this.listReserve}>List reservation of {this.state.list_reservation_cusIDTB}</Button>\n                        </FormGroup>\n                        <Table responsive striped condensed hover>\n                            <thead>\n                                <tr>\n                                    <th>First Name</th>\n                                    <th>Last Name</th>\n                                    <th>Departure station</th>\n                                    <th>Terminal station</th>\n                                    <th>Date</th>\n                                    <th>Remark</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.contacts === null ? null : this.state.contacts.map(contact => {\n                                        const { firstname, lastname, departureStation, terminalStation, date, remark } = contact;\n                                        return <tr><td>{firstname}</td><td>{lastname}</td><td>{departureStation}</td><td>{terminalStation}</td><td>{date}</td><td>{remark}</td></tr>\n\n                                    })\n                                }\n                            </tbody>\n                        </Table>\n                    </header>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\n\nexport default Reserve;\n"]},"metadata":{},"sourceType":"module"}