{"ast":null,"code":"import _regeneratorRuntime from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/draft/Desktop/project_Backend/client/src/Reserve.js\";\nimport React, { Component } from 'react';\nimport MyButton from './MyButton';\nimport MyDropdownButton from './MyDropdownButton';\nimport DayPicker from './MyDatePicker';\nimport 'react-day-picker/lib/style.css';\nimport { Table, FormGroup, ControlLabel, FormControl, Button, Tab, Tabs } from 'react-bootstrap';\nimport './App.css';\nimport MyNavBar from './MyNavBar';\n\nvar Reserve =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reserve, _Component);\n\n  function Reserve(props, context) {\n    var _this;\n\n    _classCallCheck(this, Reserve);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reserve).call(this, props, context));\n\n    _this.insertReserve = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"PLEASE TYPE NUMBER, NOT CHARACTER!\");else if (_this.state.insert_reservation_cusIDTB !== '' && _this.state.insert_reservation_tripNoTB !== '') {\n        var data = {\n          tripNo: _this.state.insert_reservation_tripNoTB,\n          customerID: _this.state.insert_reservation_cusIDTB\n        };\n        console.log(JSON.stringify(data));\n        fetch('/dplop/insert_reservation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data) //this.props.history.push('/');\n\n        });\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.cancelReserve = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"PLEASE TYPE NUMBER, NOT CHARACTER!\");else if (_this.state.cancel_reservation_RSVCodeTB !== '') {\n        fetch('/dplop/cancel_reservation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            reservationCode: _this.state.cancel_reservation_RSVCodeTB\n          })\n        }); // this.props.history.push('/');\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.handle_insert_reservation_cusID = _this.handle_insert_reservation_cusID.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_insert_reservation_tripNo = _this.handle_insert_reservation_tripNo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_cancel_reservation_RSVCode = _this.handle_cancel_reservation_RSVCode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_list_reservation_cusID = _this.handle_list_reservation_cusID.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchReservTable = _this.fetchReservTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      contacts: [],\n      insert_reservation_cusIDTB: '',\n      insert_reservation_tripNoTB: '',\n      cancel_reservation_RSVCodeTB: '',\n      list_reservation_cusIDTB: '',\n      cansend: false\n    };\n    return _this;\n  }\n\n  _createClass(Reserve, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchReservTable();\n    }\n  }, {\n    key: \"fetchReservTable\",\n    value: function () {\n      var _fetchReservTable = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.state.list_reservation_cusIDTB !== '')) {\n                  _context.next = 17;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch('/dplop/list_reservation', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    customerID: this.state.list_reservation_cusIDTB\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.prev = 4;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                results = _context.sent;\n                _context.next = 10;\n                return this.setState({\n                  contacts: results\n                });\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](4);\n                console.log('Reservation table parsing failed', _context.t0);\n\n              case 15:\n                _context.next = 17;\n                break;\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 12]]);\n      }));\n\n      return function fetchReservTable() {\n        return _fetchReservTable.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getValidationState\",\n    value: function getValidationState(txt) {\n      var length = txt.length;\n\n      if ((txt === this.state.insert_reservation_cusIDTB || txt === this.state.insert_reservation_tripNoTB || txt === this.state.insert_reservation_seatsNo || txt === this.state.cancel_reservation_RSVCodeTB || txt === this.state.list_reservation_cusIDTB) && length > 0) {\n        if (isNaN(parseInt(txt))) {\n          this.state.cansend = false;\n          return 'error';\n        } else {\n          this.state.cansend = true;\n        }\n      } // if (length > 3) return 'success';\n      // else if (length > 0) return 'error';\n\n\n      return null;\n    }\n  }, {\n    key: \"handle_insert_reservation_cusID\",\n    value: function handle_insert_reservation_cusID(e) {\n      this.setState({\n        insert_reservation_cusIDTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_insert_reservation_tripNo\",\n    value: function handle_insert_reservation_tripNo(e) {\n      this.setState({\n        insert_reservation_tripNoTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_cancel_reservation_RSVCode\",\n    value: function handle_cancel_reservation_RSVCode(e) {\n      this.setState({\n        cancel_reservation_RSVCodeTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_list_reservation_cusID\",\n    value: function handle_list_reservation_cusID(e) {\n      this.setState({\n        list_reservation_cusIDTB: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    // listReserve = e => {\n    // }\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(MyNavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"App-containers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: 1,\n        id: \"uncontrolled-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"Insert Reservation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.insert_reservation_cusIDTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Insert Reservation\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.insert_reservation_cusIDTB,\n        placeholder: \"CustomerID\",\n        onChange: this.handle_insert_reservation_cusID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.insert_reservation_tripNoTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.insert_reservation_tripNoTB,\n        placeholder: \"Trip No\",\n        onChange: this.handle_insert_reservation_tripNo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.insertReserve,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Insert\")))), React.createElement(Tab, {\n        eventKey: 2,\n        title: \"Cancel Reservation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.cancel_reservation_RSVCodeTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Cancel Reservation\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.cancel_reservation_RSVCodeTB,\n        placeholder: \"RSV Code\",\n        onChange: this.handle_cancel_reservation_RSVCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"danger\",\n        onClick: this.cancelReserve,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"List of Reservation\"), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.list_reservation_cusIDTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.list_reservation_cusIDTB,\n        placeholder: \"CustomerID\",\n        onChange: this.handle_list_reservation_cusID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.fetchReservTable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"List reservation of customer \", this.state.list_reservation_cusIDTB)), React.createElement(Table, {\n        responsive: true,\n        striped: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Reservation Code\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Reservation Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Total Fare\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Trip No.\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.contacts === null ? null : this.state.contacts.map(function (contact) {\n        var reservationCode = contact.reservationCode,\n            reservationTime = contact.reservationTime,\n            totalFare = contact.totalFare,\n            tripNo = contact.tripNo;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, reservationCode), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, reservationTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, totalFare), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, tripNo));\n      }))))));\n    }\n  }]);\n\n  return Reserve;\n}(Component);\n\nexport default Reserve;","map":{"version":3,"sources":["/Users/draft/Desktop/project_Backend/client/src/Reserve.js"],"names":["React","Component","MyButton","MyDropdownButton","DayPicker","Table","FormGroup","ControlLabel","FormControl","Button","Tab","Tabs","MyNavBar","Reserve","props","context","insertReserve","e","preventDefault","state","cansend","alert","insert_reservation_cusIDTB","insert_reservation_tripNoTB","data","tripNo","customerID","console","log","JSON","stringify","fetch","method","headers","body","cancelReserve","cancel_reservation_RSVCodeTB","reservationCode","handle_insert_reservation_cusID","bind","handle_insert_reservation_tripNo","handle_cancel_reservation_RSVCode","handle_list_reservation_cusID","fetchReservTable","contacts","list_reservation_cusIDTB","response","json","results","setState","txt","length","insert_reservation_seatsNo","isNaN","parseInt","target","value","getValidationState","map","contact","reservationTime","totalFare"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MyButton from './MyButton';\nimport MyDropdownButton from './MyDropdownButton';\nimport DayPicker from './MyDatePicker';\nimport 'react-day-picker/lib/style.css'\nimport { Table, FormGroup, ControlLabel, FormControl, Button, Tab, Tabs } from 'react-bootstrap'\nimport './App.css';\nimport MyNavBar from './MyNavBar';\n\n\nclass Reserve extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.handle_insert_reservation_cusID = this.handle_insert_reservation_cusID.bind(this);\n        this.handle_insert_reservation_tripNo = this.handle_insert_reservation_tripNo.bind(this);\n        this.handle_cancel_reservation_RSVCode = this.handle_cancel_reservation_RSVCode.bind(this);\n        this.handle_list_reservation_cusID = this.handle_list_reservation_cusID.bind(this);\n        this.fetchReservTable = this.fetchReservTable.bind(this);\n\n        this.state = {\n            contacts: [],\n            insert_reservation_cusIDTB: '',\n            insert_reservation_tripNoTB: '',\n            cancel_reservation_RSVCodeTB: '',\n            list_reservation_cusIDTB: '',\n            cansend: false\n        }\n    }\n\n    componentDidMount() {\n        this.fetchReservTable();\n    }\n\n    async fetchReservTable() {\n\n        // if (this.state.cansend === false && this.state.list_reservation_cusIDTB !== '')\n        //     alert(`PLEASE TYPE NUMBER, NOT CHARACTER!`);\n        if (this.state.list_reservation_cusIDTB !== '') {\n            // e.preventDefault()\n            const response = await fetch('/dplop/list_reservation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ customerID: this.state.list_reservation_cusIDTB })\n\n            })\n            try {\n                // this.setState({\n                //     contacts: []\n                // })\n                // const response = await fetch('https://raw.githubusercontent.com/KNTXTremE/TravelVankaWebsite/master/src/raw/rawfile')\n                const results = await response.json();\n                await this.setState({ contacts: results });\n                //console.log(this.state.results)\n            } catch (error) {\n                console.log('Reservation table parsing failed', error);\n            }\n            // this.props.history.push('/');\n        }\n        else {\n            // alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n\n    }\n\n    getValidationState(txt) {\n        const length = txt.length;\n        if ((txt === this.state.insert_reservation_cusIDTB || txt === this.state.insert_reservation_tripNoTB || txt === this.state.insert_reservation_seatsNo || txt === this.state.cancel_reservation_RSVCodeTB || txt === this.state.list_reservation_cusIDTB) && length > 0) {\n            if (isNaN(parseInt(txt))) {\n                this.state.cansend = false\n                return 'error'\n            }\n            else {\n                this.state.cansend = true\n            }\n\n        }\n        // if (length > 3) return 'success';\n        // else if (length > 0) return 'error';\n        return null;\n    }\n\n    handle_insert_reservation_cusID(e) {\n        this.setState({ insert_reservation_cusIDTB: e.target.value });\n    }\n\n    handle_insert_reservation_tripNo(e) {\n        this.setState({ insert_reservation_tripNoTB: e.target.value });\n    }\n\n    handle_cancel_reservation_RSVCode(e) {\n        this.setState({ cancel_reservation_RSVCodeTB: e.target.value });\n    }\n\n    handle_list_reservation_cusID(e) {\n        this.setState({ list_reservation_cusIDTB: e.target.value });\n    }\n\n    insertReserve = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`PLEASE TYPE NUMBER, NOT CHARACTER!`);\n        else if (this.state.insert_reservation_cusIDTB !== '' && this.state.insert_reservation_tripNoTB !== '') {\n            const data = { tripNo: this.state.insert_reservation_tripNoTB, customerID: this.state.insert_reservation_cusIDTB }\n            console.log(JSON.stringify(data))\n            fetch('/dplop/insert_reservation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n                //this.props.history.push('/');\n\n            })\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n    cancelReserve = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`PLEASE TYPE NUMBER, NOT CHARACTER!`);\n        else if (this.state.cancel_reservation_RSVCodeTB !== '') {\n            fetch('/dplop/cancel_reservation', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ reservationCode: this.state.cancel_reservation_RSVCodeTB })\n\n            })\n            // this.props.history.push('/');\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n    // listReserve = e => {\n\n    // }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"App\">\n                    <MyNavBar></MyNavBar>\n                    <header className=\"App-containers\">\n\n                        <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n                            <Tab eventKey={1} title=\"Insert Reservation\">\n                                {/* INSERT RESERVATION */}\n                                <form>\n                                    <FormGroup\n                                        controlId=\"formBasicText\"\n                                        validationState={this.getValidationState(this.state.insert_reservation_cusIDTB)}\n                                    >\n                                        <ControlLabel>Insert Reservation</ControlLabel>\n                                        <FormControl\n                                            type=\"text\"\n                                            value={this.state.insert_reservation_cusIDTB}\n                                            placeholder=\"CustomerID\"\n                                            onChange={this.handle_insert_reservation_cusID}\n                                        />\n                                        <FormControl.Feedback />\n                                    </FormGroup>\n                                    <FormGroup\n                                        controlId=\"formBasicText\"\n                                        validationState={this.getValidationState(this.state.insert_reservation_tripNoTB)}\n                                    >\n                                        <FormControl\n                                            type=\"text\"\n                                            value={this.state.insert_reservation_tripNoTB}\n                                            placeholder=\"Trip No\"\n                                            onChange={this.handle_insert_reservation_tripNo}\n                                        />\n                                        <FormControl.Feedback />\n                                        <Button bsStyle=\"primary\" onClick={this.insertReserve}>Insert</Button>\n                                    </FormGroup>\n                                </form>\n                            </Tab>\n                            <Tab eventKey={2} title=\"Cancel Reservation\">\n                                {/* CANCEL RESERVATION */}\n                                <form>\n                                    <FormGroup\n                                        controlId=\"formBasicText\"\n                                        validationState={this.getValidationState(this.state.cancel_reservation_RSVCodeTB)}\n                                    >\n                                        <ControlLabel>Cancel Reservation</ControlLabel>\n                                        <FormControl\n                                            type=\"text\"\n                                            value={this.state.cancel_reservation_RSVCodeTB}\n                                            placeholder=\"RSV Code\"\n                                            onChange={this.handle_cancel_reservation_RSVCode}\n                                        />\n                                        <FormControl.Feedback />\n                                        <Button bsStyle=\"danger\" onClick={this.cancelReserve}>Cancel</Button>\n                                    </FormGroup>\n                                </form>\n                            </Tab>\n                        </Tabs>\n\n                        {/* LIST OF RESERVATION */}\n                        <ControlLabel>List of Reservation</ControlLabel>\n                        <FormGroup\n                            controlId=\"formBasicText\"\n                            validationState={this.getValidationState(this.state.list_reservation_cusIDTB)}\n                        >\n                            <FormControl\n                                type=\"text\"\n                                value={this.state.list_reservation_cusIDTB}\n                                placeholder=\"CustomerID\"\n                                onChange={this.handle_list_reservation_cusID}\n                            />\n                            <FormControl.Feedback />\n                            <Button bsStyle=\"primary\" onClick={this.fetchReservTable}>List reservation of customer {this.state.list_reservation_cusIDTB}</Button>\n                        </FormGroup>\n                        <Table responsive striped condensed hover>\n                            <thead>\n                                <tr>\n                                    <th>Reservation Code</th>\n                                    <th>Reservation Time</th>\n                                    <th>Total Fare</th>\n                                    <th>Trip No.</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.state.contacts === null ? null : this.state.contacts.map(contact => {\n                                        const { reservationCode, reservationTime, totalFare, tripNo } = contact;\n                                        return <tr><td>{reservationCode}</td><td>{reservationTime}</td><td>{totalFare}</td><td>{tripNo}</td></tr>\n                                    })\n                                }\n                            </tbody>\n                        </Table>\n\n                        {/* <MyDropdownButton></MyDropdownButton>\n                            <DayPicker />\n                            <MyButton></MyButton> */}\n\n                    </header>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\n\nexport default Reserve;"]},"metadata":{},"sourceType":"module"}