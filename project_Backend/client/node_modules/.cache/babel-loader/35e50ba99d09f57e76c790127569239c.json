{"ast":null,"code":"import _regeneratorRuntime from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/draft/Desktop/project_Backend/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/draft/Desktop/project_Backend/client/src/Trip.js\";\nimport React, { Component } from 'react';\nimport 'react-day-picker/lib/style.css';\nimport { Table, FormGroup, ControlLabel, FormControl, Button, Tabs, Tab } from 'react-bootstrap';\nimport DayPicker from 'react-day-picker';\nimport './App.css';\nimport MyNavBar from './MyNavBar';\n\nvar Trip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Trip, _Component);\n\n  function Trip(props, context) {\n    var _this;\n\n    _classCallCheck(this, Trip);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Trip).call(this, props, context));\n\n    _this.updateTrip = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"ERROR!\");else if (_this.state.update_trip_tripNoTB !== '' && _this.state.update_trip_deptTimeTB !== '' && _this.state.update_trip_arrvTimeTB !== '') {\n        var data = {\n          tripNo: _this.state.update_trip_tripNoTB,\n          deptTime: _this.state.update_trip_deptTimeTB,\n          arrvTime: _this.state.update_trip_arrvTimeTB\n        };\n        console.log(JSON.stringify(data));\n        fetch('/dplop/update_trip', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data) //this.props.history.push('/');\n\n        });\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.listTrip = function (e) {\n      e.preventDefault();\n      if (_this.state.cansend === false) alert(\"ERROR!\");else if (_this.state.list_trip_dateTB !== null && _this.state.list_trip_routeIDTB !== '') {\n        var data = \"{\" + _this.state.list_trip_dateTB + \",\" + _this.state.list_trip_routeIDTB + \"}\";\n        console.log(JSON.stringify(data));\n        fetch('/dplop/list_trip', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n\n        _this.fetchTripTable();\n      } else {\n        alert(\"PLEASE FILL IN BEFORE PRESS THE BUTTON!\");\n      }\n    };\n\n    _this.handle_update_trip_TripNo = _this.handle_update_trip_TripNo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_update_trip_deptTime = _this.handle_update_trip_deptTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_update_trip_arrvTime = _this.handle_update_trip_arrvTime.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDayClick = _this.handleDayClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handle_list_trip_routeID = _this.handle_list_trip_routeID.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fetchTripTable = _this.fetchTripTable.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      update_trip_tripNoTB: '',\n      update_trip_deptTimeTB: '',\n      update_trip_arrvTimeTB: '',\n      list_trip_dateTB: null,\n      list_trip_routeIDTB: '',\n      tripTable: [],\n      cansend: true\n    };\n    return _this;\n  } // componentDidMount() {\n  //     this.fetchTripTable();\n  // }\n\n\n  _createClass(Trip, [{\n    key: \"fetchTripTable\",\n    value: function () {\n      var _fetchTripTable = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.setState({\n                  tripTable: []\n                });\n                _context.next = 4;\n                return fetch('https://raw.githubusercontent.com/KNTXTremE/TravelVankaWebsite/master/src/raw/rawTripTable');\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return response.json();\n\n              case 7:\n                results = _context.sent;\n                _context.next = 10;\n                return this.setState({\n                  tripTable: results\n                });\n\n              case 10:\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.log('Trip table parsing failed', _context.t0);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 12]]);\n      }));\n\n      return function fetchTripTable() {\n        return _fetchTripTable.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getValidationState\",\n    value: function getValidationState(txt) {// const length = txt.length;\n      // if ((txt === this.state.change_dept_tel_telTB || txt === this.state.add_dept_telTB) && length > 0) {\n      //     if (isNaN(parseInt(txt))) {\n      //         this.state.cansend = false\n      //         return 'error'\n      //     }\n      //     else{\n      //         this.state.cansend = true\n      //     }\n      // }\n      // // if (length > 3) return 'success';\n      // // else if (length > 0) return 'error';\n      // return null;\n    }\n  }, {\n    key: \"handle_update_trip_TripNo\",\n    value: function handle_update_trip_TripNo(e) {\n      this.setState({\n        update_trip_tripNoTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_update_trip_deptTime\",\n    value: function handle_update_trip_deptTime(e) {\n      this.setState({\n        update_trip_deptTimeTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handle_update_trip_arrvTime\",\n    value: function handle_update_trip_arrvTime(e) {\n      this.setState({\n        update_trip_arrvTimeTB: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDayClick\",\n    value: function handleDayClick(day, _ref) {\n      var selected = _ref.selected;\n      this.setState({\n        list_trip_dateTB: selected ? undefined : day.toLocaleDateString()\n      });\n      if (this.state.list_trip_dateTB !== null) console.log(this.state.list_trip_dateTB);\n    }\n  }, {\n    key: \"handle_list_trip_routeID\",\n    value: function handle_list_trip_routeID(e) {\n      this.setState({\n        list_trip_routeIDTB: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(MyNavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"header\", {\n        className: \"App-containers\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        defaultActiveKey: 1,\n        id: \"uncontrolled-tab-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        eventKey: 1,\n        title: \"Update Trip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.update_trip_tripNoTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Update Trip\"), React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.update_trip_tripNoTB,\n        placeholder: \"TripNo\",\n        onChange: this.handle_update_trip_TripNo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.update_trip_deptTimeTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.update_trip_deptTimeTB,\n        placeholder: \"Departure time\",\n        onChange: this.handle_update_trip_deptTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.update_trip_arrvTimeTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.update_trip_arrvTimeTB,\n        placeholder: \"Arrival time\",\n        onChange: this.handle_update_trip_arrvTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"warning\",\n        onClick: this.updateTrip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Update\")))), React.createElement(Tab, {\n        eventKey: 2,\n        title: \"List of Trip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"List of Trip\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.state.list_trip_dateTB ? this.state.list_trip_dateTB : 'Please select a day'), React.createElement(DayPicker, {\n        list_trip_dateTB: this.state.list_trip_dateTB,\n        onDayClick: this.handleDayClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        validationState: this.getValidationState(this.state.list_trip_routeIDTB),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        value: this.state.list_trip_routeIDTB,\n        placeholder: \"RouteID\",\n        onChange: this.handle_list_trip_routeID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(FormControl.Feedback, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: this.listTrip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"List available trip\")), React.createElement(Table, {\n        responsive: true,\n        striped: true,\n        condensed: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"TripNo\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Departure Station\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Arrival Station\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Departure Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Arrival Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Available Seats\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, this.state.tripTable === null ? null : this.state.tripTable.map(function (trip) {\n        var tripno = trip.tripno,\n            deptstation = trip.deptstation,\n            arrvstation = trip.arrvstation,\n            depttime = trip.depttime,\n            arrvtime = trip.arrvtime,\n            availseats = trip.availseats;\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, tripno), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, deptstation), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, arrvstation), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, depttime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, arrvtime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, availseats));\n      }))))))));\n    }\n  }]);\n\n  return Trip;\n}(Component);\n\nexport default Trip;","map":{"version":3,"sources":["/Users/draft/Desktop/project_Backend/client/src/Trip.js"],"names":["React","Component","Table","FormGroup","ControlLabel","FormControl","Button","Tabs","Tab","DayPicker","MyNavBar","Trip","props","context","updateTrip","e","preventDefault","state","cansend","alert","update_trip_tripNoTB","update_trip_deptTimeTB","update_trip_arrvTimeTB","data","tripNo","deptTime","arrvTime","console","log","JSON","stringify","fetch","method","headers","body","listTrip","list_trip_dateTB","list_trip_routeIDTB","fetchTripTable","handle_update_trip_TripNo","bind","handle_update_trip_deptTime","handle_update_trip_arrvTime","handleDayClick","handle_list_trip_routeID","tripTable","setState","response","json","results","txt","target","value","day","selected","undefined","toLocaleDateString","getValidationState","map","trip","tripno","deptstation","arrvstation","depttime","arrvtime","availseats"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'react-day-picker/lib/style.css'\nimport { Table, FormGroup, ControlLabel, FormControl, Button, Tabs, Tab } from 'react-bootstrap'\nimport DayPicker from 'react-day-picker';\nimport './App.css';\nimport MyNavBar from './MyNavBar';\n\n\nclass Trip extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.handle_update_trip_TripNo = this.handle_update_trip_TripNo.bind(this);\n        this.handle_update_trip_deptTime = this.handle_update_trip_deptTime.bind(this);\n        this.handle_update_trip_arrvTime = this.handle_update_trip_arrvTime.bind(this);\n        this.handleDayClick = this.handleDayClick.bind(this);\n        this.handle_list_trip_routeID = this.handle_list_trip_routeID.bind(this);\n        this.fetchTripTable = this.fetchTripTable.bind(this);\n        this.state = {\n            update_trip_tripNoTB: '',\n            update_trip_deptTimeTB: '',\n            update_trip_arrvTimeTB: '',\n            list_trip_dateTB: null,\n            list_trip_routeIDTB: '',\n            tripTable: [],\n            cansend: true\n        }\n    }\n\n\n    // componentDidMount() {\n    //     this.fetchTripTable();\n    // }\n\n    async fetchTripTable() {\n        try {\n            this.setState({\n                tripTable: []\n            })\n            const response = await fetch('https://raw.githubusercontent.com/KNTXTremE/TravelVankaWebsite/master/src/raw/rawTripTable')\n            const results = await response.json();\n            await this.setState({ tripTable: results });\n\n        } catch (error) {\n            console.log('Trip table parsing failed', error);\n        }\n    }\n\n    getValidationState(txt) {\n        // const length = txt.length;\n        // if ((txt === this.state.change_dept_tel_telTB || txt === this.state.add_dept_telTB) && length > 0) {\n        //     if (isNaN(parseInt(txt))) {\n        //         this.state.cansend = false\n        //         return 'error'\n        //     }\n        //     else{\n        //         this.state.cansend = true\n        //     }\n\n        // }\n        // // if (length > 3) return 'success';\n        // // else if (length > 0) return 'error';\n        // return null;\n    }\n\n    handle_update_trip_TripNo(e) {\n        this.setState({ update_trip_tripNoTB: e.target.value });\n    }\n\n    handle_update_trip_deptTime(e) {\n        this.setState({ update_trip_deptTimeTB: e.target.value });\n    }\n\n    handle_update_trip_arrvTime(e) {\n        this.setState({ update_trip_arrvTimeTB: e.target.value });\n    }\n\n    handleDayClick(day, { selected }) {\n        this.setState({\n            list_trip_dateTB: selected ? undefined : day.toLocaleDateString(),\n        });\n        if (this.state.list_trip_dateTB !== null)\n            console.log(this.state.list_trip_dateTB)\n    }\n\n    handle_list_trip_routeID(e) {\n        this.setState({ list_trip_routeIDTB: e.target.value });\n    }\n\n\n    updateTrip = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`ERROR!`);\n        else if (this.state.update_trip_tripNoTB !== '' && this.state.update_trip_deptTimeTB !== '' && this.state.update_trip_arrvTimeTB !== '') {\n            const data = {tripNo:this.state.update_trip_tripNoTB,deptTime:this.state.update_trip_deptTimeTB,arrvTime:this.state.update_trip_arrvTimeTB}\n            console.log(JSON.stringify(data))\n            fetch('/dplop/update_trip', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n                //this.props.history.push('/');\n            })\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n    listTrip = e => {\n        e.preventDefault()\n        if (this.state.cansend === false)\n            alert(`ERROR!`);\n        else if (this.state.list_trip_dateTB !== null && this.state.list_trip_routeIDTB !== '') {\n            const data = \"{\" + this.state.list_trip_dateTB + \",\" + this.state.list_trip_routeIDTB + \"}\"\n            console.log(JSON.stringify(data))\n            fetch('/dplop/list_trip', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n\n            })\n            this.fetchTripTable()\n        }\n        else {\n            alert(`PLEASE FILL IN BEFORE PRESS THE BUTTON!`);\n        }\n    }\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"App\">\n                    <MyNavBar></MyNavBar>\n                    <header className=\"App-containers\">\n\n                        <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n                            <Tab eventKey={1} title=\"Update Trip\">\n                                {/* UPDATE TRIP */}\n                                <form>\n                                    <FormGroup\n                                        controlId=\"formBasicText\"\n                                        validationState={this.getValidationState(this.state.update_trip_tripNoTB)}\n                                    >\n                                        <ControlLabel>Update Trip</ControlLabel>\n                                        <FormControl\n                                            type=\"text\"\n                                            value={this.state.update_trip_tripNoTB}\n                                            placeholder=\"TripNo\"\n                                            onChange={this.handle_update_trip_TripNo}\n                                        />\n                                        <FormControl.Feedback />\n                                    </FormGroup>\n                                    <FormGroup\n                                        controlId=\"formBasicText\"\n                                        validationState={this.getValidationState(this.state.update_trip_deptTimeTB)}\n                                    >\n                                        <FormControl\n                                            type=\"text\"\n                                            value={this.state.update_trip_deptTimeTB}\n                                            placeholder=\"Departure time\"\n                                            onChange={this.handle_update_trip_deptTime}\n                                        />\n                                        <FormControl.Feedback />\n                                        {/* <HelpBlock></HelpBlock> */}\n                                    </FormGroup>\n                                    <FormGroup\n                                        controlId=\"formBasicText\"\n                                        validationState={this.getValidationState(this.state.update_trip_arrvTimeTB)}\n                                    >\n                                        <FormControl\n                                            type=\"text\"\n                                            value={this.state.update_trip_arrvTimeTB}\n                                            placeholder=\"Arrival time\"\n                                            onChange={this.handle_update_trip_arrvTime}\n                                        />\n                                        <FormControl.Feedback />\n                                        {/* <HelpBlock></HelpBlock> */}\n                                        <Button bsStyle=\"warning\" onClick={this.updateTrip}>Update</Button>\n                                    </FormGroup>\n                                </form>\n                            </Tab>\n                            <Tab eventKey={2} title=\"List of Trip\">\n                                {/* LIST OF TRIP */}\n                                <ControlLabel>List of Trip</ControlLabel>\n                                <div>\n                                    <p>\n                                        {this.state.list_trip_dateTB\n                                            ? this.state.list_trip_dateTB\n                                            : 'Please select a day'}\n                                    </p>\n                                    <DayPicker\n                                        list_trip_dateTB={this.state.list_trip_dateTB}\n                                        onDayClick={this.handleDayClick}\n                                    />\n                                </div>\n\n                                <FormGroup\n                                    controlId=\"formBasicText\"\n                                    validationState={this.getValidationState(this.state.list_trip_routeIDTB)}\n                                >\n                                    <FormControl\n                                        type=\"text\"\n                                        value={this.state.list_trip_routeIDTB}\n                                        placeholder=\"RouteID\"\n                                        onChange={this.handle_list_trip_routeID}\n                                    />\n                                    <FormControl.Feedback />\n                                    {/* <HelpBlock></HelpBlock> */}\n                                    <Button bsStyle=\"primary\" onClick={this.listTrip}>List available trip</Button>\n                                </FormGroup>\n                                <Table responsive striped condensed hover>\n                                    <thead>\n                                        <tr>\n                                            <th>TripNo</th>\n                                            <th>Departure Station</th>\n                                            <th>Arrival Station</th>\n                                            <th>Departure Time</th>\n                                            <th>Arrival Time</th>\n                                            <th>Available Seats</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            this.state.tripTable === null ? null : this.state.tripTable.map(trip => {\n                                                const { tripno, deptstation, arrvstation, depttime, arrvtime, availseats } = trip;\n                                                return <tr><td>{tripno}</td><td>{deptstation}</td><td>{arrvstation}</td><td>{depttime}</td><td>{arrvtime}</td><td>{availseats}</td></tr>\n\n                                            })\n                                        }\n                                    </tbody>\n                                </Table>\n                            </Tab>\n                        </Tabs>\n\n\n                    </header>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\n\nexport default Trip;"]},"metadata":{},"sourceType":"module"}